server {
    listen 80;
    server_name staging.example.com localhost;
    
    # In staging, we'll allow HTTP access for easier testing
    # but still provide a way to test HTTPS
    
    location / {
        root /var/www/static;
        try_files $uri /index.html;
        expires 1h;
        add_header Cache-Control "public, max-age=3600";
        
        # Add staging environment banner
        add_header X-Environment "staging";
    }
    
    # Static content with shorter cache time for staging
    location /static/ {
        root /var/www;
        expires 1h; # Shorter cache for staging
        add_header Cache-Control "public, max-age=3600";
    }
    
    # API server with debug headers
    location /api/ {
        proxy_pass http://app:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        
        # Add debug headers in staging
        add_header X-Debug-Path $request_uri;
        add_header X-Debug-Host $host;
        add_header X-Debug-upstream "app:5000";
        
        # More permissive rate limiting for staging
        limit_req zone=api burst=20 nodelay;
        
        # Longer timeouts for debugging
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }
    
    # Debug endpoint - only available in staging
    location /debug/ {
        proxy_pass http://app:5000/debug/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Basic auth for debug endpoints
        auth_basic "Staging Debug Access";
        auth_basic_user_file /etc/nginx/conf.d/.htpasswd;
    }
    
    # Monitoring access
    location /monitoring/ {
        proxy_pass http://monitoring:9090/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # Basic auth for monitoring
        auth_basic "Staging Monitoring Access";
        auth_basic_user_file /etc/nginx/conf.d/.htpasswd;
    }
    
    # Error pages
    error_page 404 /404.html;
    location = /404.html {
        root /var/www/static;
        internal;
    }
    
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /var/www/static;
        internal;
    }
}

# Optional HTTPS server for staging
server {
    listen 443 ssl;
    server_name staging.example.com localhost;
    
    # Self-signed certificates for staging
    ssl_certificate /etc/nginx/ssl/staging.crt;
    ssl_certificate_key /etc/nginx/ssl/staging.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    
    # Rest of the configuration is the same as HTTP
    # You could include the configuration using the include directive
    # to avoid duplication
    
    location / {
        root /var/www/static;
        try_files $uri /index.html;
        add_header X-Environment "staging-https";
    }
    
    location /api/ {
        proxy_pass http://app:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
} 